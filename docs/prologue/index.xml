<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Prologue on</title><link>https://www.cloudhypervisor.org/docs/prologue/</link><description>Recent content in Prologue on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://www.cloudhypervisor.org/docs/prologue/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://www.cloudhypervisor.org/docs/prologue/introduction/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://www.cloudhypervisor.org/docs/prologue/introduction/</guid><description>Quick Start # See the Quick Start â†’ for a single page guide to getting started with Cloud Hypevisor.
Go further # Currently the majority of the documentation is in the source tree but a user guide, which will be hosted on this website is planned.
User documentation # Here are some documents related to particular features and functionality that a user of Cloud Hypervisor might be interested in:
HTTP API Virtual CPU configuration Using virtio-fs How to hotplug devices How to use Intel SGX vIOMMU configuration I/O throttling for network and block devices Live migration Using a MACvTAP bridge to place a VM on the host network Advanced memory configuration Snapshot &amp;amp; Restore of a VM Building a UEFI firmware for use with Cloud Hypervisor Using VFIO to passthrough PCI devices Emulated NVMe controller via vfio-user Using virtio-fs as as a root filesystem Running and debugging Windows guests Developer documentation # These documents are primarily for developers who are working on the project:</description></item><item><title>Quick Start</title><link>https://www.cloudhypervisor.org/docs/prologue/quick-start/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>https://www.cloudhypervisor.org/docs/prologue/quick-start/</guid><description>The following sections describe how to build and run Cloud Hypervisor.
Prerequisites for AArch64 # AArch64 servers (recommended) or development boards equipped with the GICv3 interrupt controller. Host OS # For required KVM functionality the minimum host kernel version is 4.11. For adequate performance the minimum recommended host kernel version is 5.6. The majority of the CI currently tests with kernel version 5.15.
Use Pre-built Binaries # The recommended approach to getting started with Cloud Hypervisor is by using a pre-built binary.</description></item><item><title>Commands</title><link>https://www.cloudhypervisor.org/docs/prologue/commands/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://www.cloudhypervisor.org/docs/prologue/commands/</guid><description>cloud-hypervisor binary # The main cloud-hypervisor has the following help output (as of v18.0):
cloud-hypervisor --help cloud-hypervisor v18.0 The Cloud Hypervisor Authors Launch a cloud-hypervisor VMM. USAGE: cloud-hypervisor [FLAGS] [OPTIONS] FLAGS: -h, --help Prints help information -v Sets the level of debugging output -V, --version Prints version information --watchdog Enable virtio-watchdog OPTIONS: --api-socket &amp;lt;api-socket&amp;gt; HTTP API socket (UNIX domain socket): path=&amp;lt;/path/to/a/file&amp;gt; or fd=&amp;lt;fd&amp;gt;. --balloon &amp;lt;balloon&amp;gt; Balloon parameters &amp;quot;size=&amp;lt;balloon_size&amp;gt;,deflate_on_oom=on|off&amp;quot; --cmdline &amp;lt;cmdline&amp;gt; Kernel command line --console &amp;lt;console&amp;gt; Control (virtio) console: &amp;quot;off|null|pty|tty|file=/path/to/a/file,iommu=on|off&amp;quot; [default: tty] --cpus &amp;lt;cpus&amp;gt; boot=&amp;lt;boot_vcpus&amp;gt;,max=&amp;lt;max_vcpus&amp;gt;,topology=&amp;lt;threads_per_core&amp;gt;:&amp;lt;cores_per_die&amp;gt;:&amp;lt;dies_per_package&amp;gt;:&amp;lt;packages&amp;gt;,kvm_hyperv=on|off,max_phys_bits=&amp;lt;maximum_number_of_physical_bits&amp;gt; [default: boot=1] --device &amp;lt;device&amp;gt; Direct device assignment parameters &amp;quot;path=&amp;lt;device_path&amp;gt;,iommu=on|off,id=&amp;lt;device_id&amp;gt;&amp;quot; --disk &amp;lt;disk&amp;gt; Disk parameters &amp;quot;path=&amp;lt;disk_image_path&amp;gt;,readonly=on|off,direct=on|off,iommu=on|off,num_queues=&amp;lt;number_of_queues&amp;gt;,queue_size=&amp;lt;size_of_each_queue&amp;gt;,vhost_user=on|off,socket=&amp;lt;vhost_user_socket_path&amp;gt;,poll_queue=on|off,bw_size=&amp;lt;bytes&amp;gt;,bw_one_time_burst=&amp;lt;bytes&amp;gt;,bw_refill_time=&amp;lt;ms&amp;gt;,ops_size=&amp;lt;io_ops&amp;gt;,ops_one_time_burst=&amp;lt;io_ops&amp;gt;,ops_refill_time=&amp;lt;ms&amp;gt;,id=&amp;lt;device_id&amp;gt;&amp;quot; --event-monitor &amp;lt;event-monitor&amp;gt; File to report events on: path=&amp;lt;/path/to/a/file&amp;gt; or fd=&amp;lt;fd&amp;gt; --fs &amp;lt;fs&amp;gt; virtio-fs parameters &amp;quot;tag=&amp;lt;tag_name&amp;gt;,socket=&amp;lt;socket_path&amp;gt;,num_queues=&amp;lt;number_of_queues&amp;gt;,queue_size=&amp;lt;size_of_each_queue&amp;gt;,dax=on|off,cache_size=&amp;lt;DAX cache size: default 8Gib&amp;gt;,id=&amp;lt;device_id&amp;gt;&amp;quot; --initramfs &amp;lt;initramfs&amp;gt; Path to initramfs image --kernel &amp;lt;kernel&amp;gt; Path to loaded kernel.</description></item></channel></rss>